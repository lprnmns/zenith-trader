version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: zenith_trader_db
    environment:
      POSTGRES_DB: zenith_trader_db
      POSTGRES_USER: zenith_user
      POSTGRES_PASSWORD: zenith_password
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - zenith_network
    restart: unless-stopped

  # Redis Cache (opsiyonel)
  redis:
    image: redis:7-alpine
    container_name: zenith_trader_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - zenith_network
    restart: unless-stopped

  # Zenith Trader Application
  app:
    build: .
    container_name: zenith_trader_app
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://zenith_user:zenith_password@postgres:5432/zenith_trader_db
      REDIS_URL: redis://redis:6379
      ENCRYPTION_KEY: ${ENCRYPTION_KEY:-your-secret-key-32-chars-long!!}
      JWT_SECRET: ${JWT_SECRET:-your-jwt-secret-key}
      ZERION_API_KEY: ${ZERION_API_KEY}
      ETHERSCAN_API_KEY: ${ETHERSCAN_API_KEY}
      VAPID_PUBLIC_KEY: ${VAPID_PUBLIC_KEY}
      VAPID_PRIVATE_KEY: ${VAPID_PRIVATE_KEY}
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - zenith_network
    restart: unless-stopped
    volumes:
      - ./logs:/app/logs

  # Nginx Reverse Proxy (opsiyonel)
  nginx:
    image: nginx:alpine
    container_name: zenith_trader_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - zenith_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  zenith_network:
    driver: bridge



