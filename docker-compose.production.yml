version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: zenith-postgres
    environment:
      POSTGRES_USER: zenith
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: zenith_trader_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backup:/backup
    networks:
      - zenith-network
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U zenith"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile.production
    container_name: zenith-backend
    environment:
      DATABASE_URL: postgresql://zenith:${DB_PASSWORD}@postgres:5432/zenith_trader_db
      NODE_ENV: production
      PORT: 3001
      # API Keys from environment
      ZERION_API_KEY: ${ZERION_API_KEY}
      ETHERSCAN_API_KEY: ${ETHERSCAN_API_KEY}
      OKX_API_KEY: ${OKX_API_KEY}
      OKX_API_SECRET: ${OKX_API_SECRET}
      OKX_PASSPHRASE: ${OKX_PASSPHRASE}
      JWT_SECRET: ${JWT_SECRET}
      SESSION_SECRET: ${SESSION_SECRET}
      ENCRYPTION_KEY: ${ENCRYPTION_KEY}
      # Google OAuth
      GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
      GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
      GOOGLE_REDIRECT_URI: ${GOOGLE_REDIRECT_URI}
      GOOGLE_SUCCESS_REDIRECT: ${GOOGLE_SUCCESS_REDIRECT}
      GOOGLE_FAILURE_REDIRECT: ${GOOGLE_FAILURE_REDIRECT}
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - zenith-network
    restart: always
    volumes:
      - ./logs:/app/logs
      - ./prisma:/app/prisma
    command: >
      sh -c "
        npx prisma migrate deploy &&
        pm2-runtime start ecosystem.config.js
      "
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"

  # Optional: Nginx reverse proxy for SSL termination
  nginx:
    image: nginx:alpine
    container_name: zenith-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
    networks:
      - zenith-network
    restart: always

networks:
  zenith-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local
